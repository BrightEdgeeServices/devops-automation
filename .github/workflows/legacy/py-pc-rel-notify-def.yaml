# py-pc-rel-notify-def.yaml
# Reusable workflow: Create Release and Send Notice after PR merge
name: Release-And-Notify

on:
  workflow_call:
    inputs:
      tag_name:
        description: "Optional: Explicit tag name for the release (e.g., v1.2.3). If omitted, tag is derived from pyproject.toml"
        required: false
        type: string
    secrets:
      RELEASE_EMAIL_USER:
        required: true
      RELEASE_EMAIL_PASSWORD:
        required: true

jobs:
  Release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag_name: ${{ steps.compute_tag.outputs.tag_name }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Compute tag name
        id: compute_tag
        shell: bash
        run: |
          if [ -n "${{ inputs.tag_name }}" ]; then
            echo "Using provided tag: ${{ inputs.tag_name }}"
            echo "tag_name=${{ inputs.tag_name }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          python - <<'PY'
          import os
          import pathlib
          import sys
          try:
              import tomllib  # Python 3.11+
          except ModuleNotFoundError:
              print("tomllib is required to parse pyproject.toml", file=sys.stderr)
              sys.exit(1)

          pp = pathlib.Path("pyproject.toml")
          if not pp.exists():
              print("pyproject.toml not found in repository root", file=sys.stderr)
              sys.exit(1)

          data = tomllib.loads(pp.read_text(encoding="utf-8"))
          version = None
          # Preferred PEP621 location
          project = data.get("project")
          if isinstance(project, dict):
              version = project.get("version")
          # Fallback to Poetry legacy location if present
          if not version:
              tool = data.get("tool") or {}
              poetry = tool.get("poetry") if isinstance(tool, dict) else None
              if isinstance(poetry, dict):
                  version = poetry.get("version")

          if not version:
              print("Version not found in pyproject.toml under [project].version or [tool.poetry].version", file=sys.stderr)
              sys.exit(1)

          tag = f"v{version}"
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as fh:
              fh.write(f"tag_name={tag}\n")
          print(f"Derived tag from pyproject.toml: {tag}")
          PY

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ steps.compute_tag.outputs.tag_name }}
          name:      ${{ steps.compute_tag.outputs.tag_name }}
          body_path: ${{ github.workspace }}/ReleaseNotes.md
          draft: false
          prerelease: false

  Notify:
    name: Send Release Notification
    runs-on: ubuntu-latest
    needs: Release
    strategy:
      fail-fast: true
      matrix:
        python-version: [ '3.13' ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: USername and Password
        run: |
          echo ${{ secrets.RELEASE_EMAIL_USER }}
          echo ${{ secrets.RELEASE_EMAIL_PASSWORD }}

      - name: Send release email notification
        uses: betterfor/action-send-mail@main
        with:
          server_address: mail.realtimeevents.co
          server_port:    465
          username:       ${{ secrets.RELEASE_EMAIL_USER }}
          password:       ${{ secrets.RELEASE_EMAIL_PASSWORD }}
          subject:        'New Release: ${{ github.repository }} ${{ needs.release.outputs.tag_name }}'
          to:             rte-development@brightedge.co.za
          from:           Development Messenger
          html_body:      |
                          <table style="font-family: verdana;font-size:90%; border-collapse:collapse; border-style: double; border-color: 000000; border-width: 3px">
                          <colgroup>
                            <col style="text-align:right">
                            <col style="text-align:left">
                          </colgroup>
                          <tr>
                            <th style="text-align: center; border-bottom-style: double; border-right-style: double; border-right-width: 1px; border-bottom-width: 3px">Description</th>
                            <th style="text-align: center; border-bottom-style: double; border-left-style: double; border-bottom-width: 3px; border-left-width: 1px">Detail</th>
                          </tr>
                          <tr>
                            <td style="text-align: right; border-right-style: solid; border-bottom-style: dotted; border-right-width: 1px;border-bottom-width: 1px">Repository:</td>
                            <td style="text-align: left; border-bottom-style: dotted; border-left-style: solid; border-left-width: 1px;border-bottom-width: 1px">${{ github.repository }}</td>
                          </tr>
                          <tr>
                            <td style="text-align: right; border-right-style: solid; border-bottom-style: dotted; border-right-width: 1px;border-bottom-width: 1px">Release:</td>
                            <td style="text-align: left; border-bottom-style: dotted; border-left-style: solid; border-left-width: 1px;border-bottom-width: 1px">${{ needs.release.outputs.tag_name }}</td>
                          </tr>
                          <tr>
                            <td style="text-align: right; border-right-style: solid; border-bottom-style: dotted; border-right-width: 1px;border-bottom-width: 1px">Actor:</td>
                            <td style="text-align: left; border-bottom-style: dotted; border-left-style: solid; border-left-width: 1px;border-bottom-width: 1px">${{ github.actor }}</td>
                          </tr>
                          <tr>
                            <td style="text-align: right; border-right-style: solid; border-bottom-style: dotted; border-right-width: 1px;border-bottom-width: 1px">Workflow:</td>
                            <td style="text-align: left; border-bottom-style: dotted; border-left-style: solid; border-left-width: 1px;border-bottom-width: 1px">${{ github.workflow }}</td>
                          </tr>
                          <tr>
                            <td style="text-align: right; border-right-style: solid; border-right-width: 1px">Release URL:</td>
                            <td style="text-align: left; border-left-style: solid; border-left-width: 1px"><a href="https://github.com/${{ github.repository }}/releases/tag/${{ needs.release.outputs.tag_name }}">Click here</a></td>
                          </tr>
                          </table><br>
          priority:       normal
