# py-pc-ci-pub_with_docker-def.yaml
# ToDo
# This is a copied version and has to be fixed
name: CI

on:
  workflow_call:
    secrets:
      GH_REPO_ACCESS_BEE_MASTER:
        required: true
      GH_REPO_ACCESS_RTE_MASTER:
        required: true

jobs:
  CI:
    runs-on: ${{matrix.os}}
    env:
      # GH_REPO_ACCESS_BY_OWN_APPS: ${{ secrets.GH_REPO_ACCESS_BY_OWN_APPS }}
      INSTALLER_USER_ID:   ${{secrets.INSTALLER_USER_ID}}
      INSTALLER_USER_PWD:  ${{secrets.INSTALLER_USER_PWD}}
      MYSQL_DATABASE:      ${{vars.MYSQL_DATABASE}}
      MYSQL_HOST:          ${{vars.MYSQL_HOST}}
      MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_TCP_PORT:      ${{vars.MYSQL_TCP_PORT }}
      MYSQL_PASSWORD:      ${{secrets.MYSQL_PASSWORD}}
      MYSQL_PWD:           ${{vars.MYSQL_PWD}}
      MYSQL_USER:          ${{secrets.MYSQL_USER}}
      PROJECT_NAME:        ${{vars.PROJECT_NAME }}

    strategy:
      fail-fast: true
      matrix:
        #        python-version: ['3.8', '3.9', '3.10', '3.11']
        python-version: [ '3.13' ]
        #        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        os: [ 'ubuntu-latest' ]

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture:   x64

      - name: Install Docker Compose
        run:  |
              sudo apt-get update
              sudo apt-get install -y docker-compose

      - name: Install Poetry
        run:  |
              curl -sSL https://install.python-poetry.org | python3 -
              echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Configure Poetry
        run:  |
              poetry config keyring.enabled false
              # poetry config http-basic.PoetryPrivate __token__ ${{ secrets.GH_REPO_ACCESS_CURR_USER }}
              # poetry source add --priority=explicit PoetryPrivate https://github.com/BrightEdgeeServices/PoetryPrivate.git
              # poetry add git+https://github.com/BrightEdgeeServices/PoetryPrivate.git

      - name: Install dependencies
        run:  |
              poetry install --with dev

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Start Docker Compose
        run:  docker-compose -f docker-compose.yaml up -d

      - name: Wait for services to be ready
        run:  |
              echo "Waiting for services to start..."
              sleep 10

      - name: Run pytest with coverage
        run:  |
              poetry run pytest --cov=./ --cov-report=xml --maxfail=1 tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files:            coverage.xml
          fail_ci_if_error: true
          token:            ${{ secrets.CODECOV_TOKEN_MASTER }}
          slug:             BrightEdgeeServices/PythonTemplateIt
      - name: Tear down Docker Compose
        if:   always()
        run:  docker-compose -f docker-compose.yaml down
