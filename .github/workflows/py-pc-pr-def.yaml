# py-pc-pr-def.yaml
name: PR-and-Build

on:
  workflow_call:
    secrets:
      GH_REPO_ACCESS_BEE_MASTER:
        required: true
      GH_REPO_ACCESS_RTE_MASTER:
        required: true

jobs:
  Create-PR:
#    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    strategy:
      fail-fast: true
      matrix:
        python-version: [ '3.12' ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git identity
        run:  |
              git config --global user.name 'GitHub Action'
              git config --global user.email 'action@github.com'

      - name: Create pull request into master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          BASE="master"
          TITLE="Publish: Merge ${BRANCH} into ${BASE}"
          BODY="Automated PR generated by reusable workflow."

          echo "Attempting to create PR from '${BRANCH}' to '${BASE}'"
          # If a PR already exists for this head->base pair, skip creating a new one
          if gh pr view --head "$BRANCH" --base "$BASE" >/dev/null 2>&1; then
            echo "A pull request from '$BRANCH' to '$BASE' already exists. Skipping creation."
          else
            gh pr create \
              --base "$BASE" \
              --head "$BRANCH" \
              --title "$TITLE" \
              --body "$BODY"
          fi


  Build-Only-From-Tag:
    if: ${{ github.ref_type == 'tag' && github.ref_name == 'pr' }}
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.13" ]

    env:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER}}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER}}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to include tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture:   x64

      - name: Install Poetry
        run:  |
              curl -sSL https://install.python-poetry.org | python3 -
              echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Configure Poetry
        run:  |
              poetry config keyring.enabled false
              poetry config http-basic.BEE __token__ ${{ secrets.GH_REPO_ACCESS_BEE_MASTER }}
              poetry config http-basic.RTE __token__ ${{ secrets.GH_REPO_ACCESS_RTE_MASTER }}

      - name: Install dependencies
        run:  |
              poetry install --with dev

      - name: Build and publish with Poetry
        run:  |
              poetry build
