# py-wf-pr-pvt_no_docker-def.yaml
name: Pre-Commit, CI and PR (default)

on:
  workflow_call:
#    inputs:
#      run_publish:
#        description: "Set to 'true' to run the Build-and-Publish job tag was specified."
#        required:    true
#        default:     false
#        type:        boolean
    secrets:
      GH_REPO_ACCESS_BEE_MASTER:
        required: true
      GH_REPO_ACCESS_RTE_MASTER:
        required: true
      INSTALLER_USER_ID:
        required: true
      INSTALLER_USER_PWD:
        required: true
      MYSQL_DATABASE:
        required: true
      MYSQL_HOST:
        required: true
      MYSQL_PASSWORD:
        required: true
      MYSQL_ROOT_PASSWORD:
        required: true
      MYSQL_TCP_PORT:
        required: true
      MYSQL_USER:
        required: true
      RELEASE_EMAIL_USER:
        required: true
      RELEASE_EMAIL_PASSWORD:
        required: true
      VENV_ENVIRONMENT:
        required: true

jobs:

  Pre-Commit:
    uses:    BrightEdgeeServices/devops-automation/.github/workflows/py-pc-precom-def.yaml@master
    secrets: inherit

  CI:
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-ci-pvt_no_docker-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}
      INSTALLER_USER_ID:         ${{secrets.INSTALLER_USER_ID }}
      INSTALLER_USER_PWD:        ${{secrets.INSTALLER_USER_PWD }}
      MYSQL_DATABASE:            ${{secrets.MYSQL_DATABASE }}
      MYSQL_HOST:                ${{secrets.MYSQL_HOST }}
      MYSQL_PASSWORD:            ${{secrets.MYSQL_PASSWORD}}
      MYSQL_ROOT_PASSWORD:       ${{secrets.MYSQL_ROOT_PASSWORD}}
      MYSQL_TCP_PORT:            ${{secrets.MYSQL_TCP_PORT }}
      MYSQL_USER:                ${{secrets.MYSQL_USER}}
      RELEASE_EMAIL_USER:        ${{secrets.RELEASE_EMAIL_USER }}
      RELEASE_EMAIL_PASSWORD:    ${{secrets.RELEASE_EMAIL_PASSWORD }}
      VENV_ENVIRONMENT:          ${{secrets.VENV_ENVIRONMENT }}

  Detect-PR-Tag:
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-pr-detect_tag-def.yaml@master
    secrets: inherit
  PR:
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    # Run whenever the repository currently has a tag named 'pr'
    if: ${{ always() && needs.Detect-PR-Tag.outputs.has_pr_tag == 'true' }}
    needs:
      - Detect-PR-Tag
      - Pre-Commit
      - CI
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-pr-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}

  Cleanup-Delete-pr-Tag:
    permissions:
      contents: write
    if: ${{ always() && needs.Detect-PR-Tag.outputs.has_pr_tag == 'true' }}
    needs:
      - Detect-PR-Tag
      - Pre-Commit
      - CI
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-pr-cleanup_tag-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}
