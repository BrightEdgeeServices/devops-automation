# py-wf-pr-pvt_no_docker-def.yaml
name: Pre-Commit, CI and PR (default)

on:
  workflow_call:
#    inputs:
#      run_publish:
#        description: "Set to 'true' to run the Build-and-Publish job tag was specified."
#        required:    true
#        default:     false
#        type:        boolean
    secrets:
      GH_REPO_ACCESS_BEE_MASTER:
        required: true
      GH_REPO_ACCESS_RTE_MASTER:
        required: true
#      MYSQL_PASSWORD:
#        required: true
#      MYSQL_ROOT_PASSWORD:
#        required: true
#      MYSQL_USER:
#        required: true
#      RELEASE_EMAIL_USER:
#        required: true
#      RELEASE_EMAIL_PASSWORD:
#        required: true

jobs:

  Pre-Commit:
    uses:    BrightEdgeeServices/devops-automation/.github/workflows/py-pc-precom-def.yaml@master
    secrets: inherit

  CI:
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-ci-pvt_no_docker-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}

  Detect-PR-Tag:
    runs-on: ubuntu-latest
    outputs:
      has_pr_tag: ${{ steps.detect.outputs.has_pr_tag }}
    steps:
      - name: Check if tag 'pr' exists in remote
        id: detect
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git ls-remote --exit-code --tags "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" refs/tags/pr >/dev/null 2>&1; then
            echo "has_pr_tag=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_pr_tag=false" >> "$GITHUB_OUTPUT"
          fi
  PR:
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    # Run whenever the repository currently has a tag named 'pr'
    if: ${{ always() && needs.Detect-PR-Tag.outputs.has_pr_tag == 'true' }}
    needs:
      - Detect-PR-Tag
      - Pre-Commit
      - CI
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-pr-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}

  Cleanup-Delete-pr-Tag:
    permissions:
      contents: write
    if: ${{ always() && needs.Detect-PR-Tag.outputs.has_pr_tag == 'true' }}
    uses: BrightEdgeeServices/devops-automation/.github/workflows/py-pc-pr-cleanup_tag-def.yaml@master
    secrets:
      GH_REPO_ACCESS_BEE_MASTER: ${{secrets.GH_REPO_ACCESS_BEE_MASTER }}
      GH_REPO_ACCESS_RTE_MASTER: ${{secrets.GH_REPO_ACCESS_RTE_MASTER }}
